//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Osnowa.Osnowa.Example.ECS.Carrying.HeldComponent held { get { return (Osnowa.Osnowa.Example.ECS.Carrying.HeldComponent)GetComponent(GameComponentsLookup.Held); } }
    public bool hasHeld { get { return HasComponent(GameComponentsLookup.Held); } }

    public void AddHeld(System.Guid newParentEntity) {
        var index = GameComponentsLookup.Held;
        var component = (Osnowa.Osnowa.Example.ECS.Carrying.HeldComponent)CreateComponent(index, typeof(Osnowa.Osnowa.Example.ECS.Carrying.HeldComponent));
        component.ParentEntity = newParentEntity;
        AddComponent(index, component);
    }

    public void ReplaceHeld(System.Guid newParentEntity) {
        var index = GameComponentsLookup.Held;
        var component = (Osnowa.Osnowa.Example.ECS.Carrying.HeldComponent)CreateComponent(index, typeof(Osnowa.Osnowa.Example.ECS.Carrying.HeldComponent));
        component.ParentEntity = newParentEntity;
        ReplaceComponent(index, component);
    }

    public void RemoveHeld() {
        RemoveComponent(GameComponentsLookup.Held);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHeld;

    public static Entitas.IMatcher<GameEntity> Held {
        get {
            if (_matcherHeld == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Held);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHeld = matcher;
            }

            return _matcherHeld;
        }
    }
}
